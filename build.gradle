
description = "Mocca is a GraphQL client for JVM languages with the goal of being easy to use, flexible and modular."

Set testModules = [
    "mocca-functional-tests",
    "mocca-http-client-tests"
]

subprojects {

    group = 'com.paypal.mocca'
    version = '0.0.3-SNAPSHOT'

    apply plugin: 'java-library'
    apply plugin: 'pmd'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    def javaVersion = JavaVersion.VERSION_1_8
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
    }

    compileJava {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }

    test.useTestNG()

    pmd {
        ignoreFailures = true
        pmdTest.enabled= false
        pmdMain.enabled = true
    }

    tasks.withType(Pmd) {
        reports {
            xml.required = true
            html.required = true
            xml.destination file("${buildDir}/reports/pmd/pmd_report.xml")
            html.destination file("${buildDir}/reports/pmd/pmd_report.html")
        }
    }

    def releaseDeployment = !testModules.contains(name) && !version.endsWith("SNAPSHOT") && System.getenv("SECRING_FILE") != null

    // Publishing non test modules
    if (!testModules.contains(name)) {

        if (releaseDeployment) {
            java {
                withJavadocJar()
                withSourcesJar()
            }

            project.ext['signing.keyId'] = "$System.env.GPG_KEYNAME"
            project.ext['signing.password'] = "$System.env.GPG_PASSPHRASE"
            project.ext['signing.secretKeyRingFile'] = "$System.env.SECRING_FILE"
        }

        ext {
            ossrhUsername = System.getenv('SONATYPE_USER')
            ossrhPassword = System.getenv('SONATYPE_PASSWORD')
        }

        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from components.java
                    pom {
                        name = project.name
                        description = 'Mocca is a GraphQL client for JVM languages with the goal of being easy to use, flexible and modular'
                        url = 'https://github.com/paypal/mocca'
                        scm {
                            connection = 'scm:git:git@github.com:paypal/mocca.git'
                            developerConnection = 'scm:git:git@github.com:paypal/mocca.git'
                            url = 'git@github.com:paypal/mocca.git'
                        }
                        licenses {
                            license {
                                name = 'MIT'
                                url = 'https://opensource.org/licenses/MIT'
                            }
                        }
                        developers {
                            developer {
                                id = 'fabiocarvalho777'
                                name = 'Fabio Carvalho'
                                email = 'fabiocarvalho777@gmail.com'
                                organization = 'PayPal'
                                organizationUrl = 'http://www.paypal.com'
                            }
                            developer {
                                id = 'abhijith-prabhakar'
                                name = 'Abhijith Prabhakar'
                                email = 'abhi.predator@gmail.com'
                                organization = 'PayPal'
                                organizationUrl = 'http://www.paypal.com'
                            }
                            developer {
                                id = 'crankydillo'
                                name = 'Samuel Cox'
                                email = 'crankydillo@gmail.com'
                                organization = 'PayPal'
                                organizationUrl = 'http://www.paypal.com'
                            }
                        }
                    }
                }
            }
            repositories {
                maven {
                    def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                    def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    credentials {
                        username = ossrhUsername
                        password = ossrhPassword
                    }
                }
            }
        }

        if (releaseDeployment) {
            signing {
                sign publishing.publications.mavenJava
            }

            javadoc {
                if(JavaVersion.current().isJava9Compatible()) {
                    options.addBooleanOption('html5', true)
                }
            }
        }
    }
}

def feign_version = '11.5'

// Dependencies version management
ext.lib = [

        // Java specs
        slf4j_api: 'org.slf4j:slf4j-api:1.7.25',
        javax_servlet: 'javax.servlet:javax.servlet-api:4.0.1',
        jaxrs2: 'javax.ws.rs:javax.ws.rs-api:2.1.1',

        // Open Feign
        feign_core: 'io.github.openfeign:feign-core:' + feign_version,
        feign_apache: 'io.github.openfeign:feign-httpclient:' + feign_version,
        feign_hc5: 'io.github.openfeign:feign-hc5:' + feign_version,
        feign_google: 'io.github.openfeign:feign-googlehttpclient:' + feign_version,
        feign_java11: 'io.github.openfeign:feign-java11:' + feign_version,
        feign_jaxrs2: 'io.github.openfeign:feign-jaxrs2:' + feign_version,
        feign_okhttp: 'io.github.openfeign:feign-okhttp:' + feign_version,
        feign_micrometer: 'io.github.openfeign:feign-micrometer:' + feign_version,

        // Observability
        micrometer: 'io.micrometer:micrometer-core:1.3.5',

        // HTTP clients (make sure these versions are aligned with the versions used by Feign)
        apache_client: 'org.apache.httpcomponents:httpclient:4.5.10',
        hc5_client: 'org.apache.httpcomponents.client5:httpclient5:5.0-beta7',
        google_client: 'com.google.http-client:google-http-client:1.31.0',
        okhttp_client: 'com.squareup.okhttp3:okhttp:4.6.0',

        // Jersey
        jersey_client: "org.glassfish.jersey.core:jersey-client:2.32",
        jersey_hk2: "org.glassfish.jersey.inject:jersey-hk2:2.32",
        jersey_media_json_jackson: 'org.glassfish.jersey.media:jersey-media-json-jackson:2.32',
        jersey_netty_connector: "org.glassfish.jersey.connectors:jersey-netty-connector:2.32",
        jersey_test: "org.glassfish.jersey.test-framework:jersey-test-framework-core:2.32",
        jersey_jetty: "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:2.32",
        jackson_provider: "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.10.3",

        // Graphql
        graphql_tools: "com.graphql-java-kickstart:graphql-java-tools:6.1.0",
        
        // Jetty
        jetty_server: "org.eclipse.jetty:jetty-server:9.2.28.v20190418",

        // Utils
        activation: 'javax.activation:activation:1.1.1',
        commmons: 'commons-io:commons-io:2.6',
        logback: 'ch.qos.logback:logback-classic:1.2.3',

        // Jackson
        jackson_annotations: 'com.fasterxml.jackson.core:jackson-annotations:2.9.9',
        jackson_databind: 'com.fasterxml.jackson.core:jackson-databind:2.9.9',
        jackson_datatype_jsr301: 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.9',
        jackson_modules_java8: 'com.fasterxml.jackson.module:jackson-modules-java8:2.9.9',

        // Resilience
        resilience4j_feign: 'io.github.resilience4j:resilience4j-feign:1.3.0',
        resilience4j_retry: 'io.github.resilience4j:resilience4j-retry:1.3.0',
        resilience4j_circuitbreaker: 'io.github.resilience4j:resilience4j-circuitbreaker:1.3.0',
        resilience4j_ratelimiter: 'io.github.resilience4j:resilience4j-ratelimiter:1.3.0',
        resilience4j_bulkhead: 'io.github.resilience4j:resilience4j-bulkhead:1.3.0',

        // Tests
        testng: 'org.testng:testng:6.14.3',
        slf4j_simple: 'org.slf4j:slf4j-simple:1.7.25',
        wiremock: 'com.github.tomakehurst:wiremock:2.24.1',
        mockito_core: 'org.mockito:mockito-core:3.3.0'
]
