import io.github.kobylynskyi.graphql.codegen.gradle.GraphQLCodegenGradleTask

plugins {
    id "io.github.kobylynskyi.graphql.codegen" version "4.1.5"
}

/**
 * Server side code generation
 */
compileJava.dependsOn "graphqlCodegen"
sourceSets.main.java.srcDir "$buildDir/generated"
graphqlCodegen {
    graphqlSchemas.rootDir = "$projectDir/src/main/resources/schema"
    outputDir = new File("$buildDir/generated")
    apiPackageName = "com.paypal.mocca.api"
    modelPackageName = "com.paypal.mocca.model"
    modelValidationAnnotation = ""
    parentInterfaces {
        queryResolver = "graphql.kickstart.tools.GraphQLQueryResolver"
        mutationResolver = "graphql.kickstart.tools.GraphQLMutationResolver"
    }
    generateApis = true
    apiInterfaceStrategy = "DO_NOT_GENERATE"
    addGeneratedAnnotation = false
}

/**
 * Generate only model for Mocca client
 */
compileJava.dependsOn "graphqlCodegenClient"
sourceSets.main.java.srcDir "$buildDir/generated-client"
task graphqlCodegenClient(type: GraphQLCodegenGradleTask) {
    graphqlSchemas.rootDir = "$projectDir/src/main/resources/schema"
    outputDir = new File("$buildDir/generated-client")
    modelPackageName = "com.paypal.mocca.client.model"
    generateApis = false
    generateClient = false
    generateParameterizedFieldsResolvers = false
    modelValidationAnnotation = ""
    addGeneratedAnnotation = false
}

dependencies {
    implementation lib.jersey_hk2,
                   lib.graphql_tools,
                   lib.slf4j_api,
                   lib.javax_servlet,
                   lib.jersey_media_json_jackson,
                   lib.jackson_provider,
                   lib.logback,
                   lib.jetty_server,
                   lib.hibernate_validator,
                   lib.jakarta_el

    testImplementation project(':mocca-client'),
                       project(':mocca-okhttp'),
                       project(':mocca-hc5'),
                       project(':mocca-micrometer'),
                       project(':mocca-resiliency4j'),
                       lib.testng,
                       lib.jersey_test,
                       lib.jersey_jetty,
                       lib.hibernate_validator
}
